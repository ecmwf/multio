set(MULTIOM_CONTAINERS_DIR ${CMAKE_CURRENT_SOURCE_DIR})


# Enter in the module
message("${OFFSET} + containers sources: ${CMAKE_CURRENT_BINARY_DIR}")

# Recursive print
set(OFFSET ${OFFSET}${DOFFSET})

#
# + CONFIGURE HEADERS
# ======================================================================
set(TEMPLATE_KEY_TYPE "INTEGER(KIND=INT8)")
set(TEMPLATE_KEY_DUMMY_TYPE "INTEGER(KIND=INT8)")
set(TEMPLATE_KEY_NAME "INT8")
set(TEMPLATE_KEY_FNAME "int8")
set(TEMPLATE_USE_KEY  "USE, INTRINSIC :: ISO_FORTRAN_ENV, ONLY: INT8")
set(TEMPLATE_KEY_INITIAL_VALUE "0_INT8" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "INTEGER(KIND=INT16)")
set(TEMPLATE_KEY_DUMMY_TYPE "INTEGER(KIND=INT16)")
set(TEMPLATE_KEY_NAME "INT16")
set(TEMPLATE_KEY_FNAME "int16")
set(TEMPLATE_USE_KEY  "USE, INTRINSIC :: ISO_FORTRAN_ENV, ONLY: INT16")
set(TEMPLATE_KEY_INITIAL_VALUE "0_INT16" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "INTEGER(KIND=INT32)")
set(TEMPLATE_KEY_DUMMY_TYPE "INTEGER(KIND=INT32)")
set(TEMPLATE_KEY_NAME "INT32")
set(TEMPLATE_KEY_FNAME "int32")
set(TEMPLATE_USE_KEY  "USE, INTRINSIC :: ISO_FORTRAN_ENV, ONLY: INT32")
set(TEMPLATE_KEY_INITIAL_VALUE "0_INT32" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "INTEGER(KIND=INT64)")
set(TEMPLATE_KEY_DUMMY_TYPE "INTEGER(KIND=INT64)")
set(TEMPLATE_KEY_NAME "INT64")
set(TEMPLATE_KEY_FNAME "int64")
set(TEMPLATE_USE_KEY  "USE, INTRINSIC :: ISO_FORTRAN_ENV, ONLY: INT64")
set(TEMPLATE_KEY_INITIAL_VALUE "0_INT64" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "INTEGER(KIND=REAL32)")
set(TEMPLATE_KEY_DUMMY_TYPE "INTEGER(KIND=REAL32)")
set(TEMPLATE_KEY_NAME "REAL32")
set(TEMPLATE_KEY_FNAME "real32")
set(TEMPLATE_USE_KEY  "USE, INTRINSIC :: ISO_FORTRAN_ENV, ONLY: REAL32")
set(TEMPLATE_KEY_INITIAL_VALUE "0.0_REAL32" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "INTEGER(KIND=REAL64)")
set(TEMPLATE_KEY_DUMMY_TYPE "INTEGER(KIND=REAL64)")
set(TEMPLATE_KEY_NAME "REAL64")
set(TEMPLATE_KEY_FNAME "real64")
set(TEMPLATE_USE_KEY  "USE, INTRINSIC :: ISO_FORTRAN_ENV, ONLY: REAL64")
set(TEMPLATE_KEY_INITIAL_VALUE "0.0_REAL64" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )




set(TEMPLATE_KEY_TYPE "CHARACTER(LEN=2)")
set(TEMPLATE_KEY_DUMMY_TYPE "CHARACTER(LEN=*)")
set(TEMPLATE_KEY_NAME "STRING2")
set(TEMPLATE_KEY_FNAME "string2")
set(TEMPLATE_USE_KEY  "")
set(TEMPLATE_KEY_INITIAL_VALUE "REPEAT(' ',2)" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "CHARACTER(LEN=4)")
set(TEMPLATE_KEY_DUMMY_TYPE "CHARACTER(LEN=*)")
set(TEMPLATE_KEY_NAME "STRING4")
set(TEMPLATE_KEY_FNAME "string4")
set(TEMPLATE_USE_KEY  "")
set(TEMPLATE_KEY_INITIAL_VALUE "REPEAT(' ',4)" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "CHARACTER(LEN=8)")
set(TEMPLATE_KEY_DUMMY_TYPE "CHARACTER(LEN=*)")
set(TEMPLATE_KEY_NAME "STRING8")
set(TEMPLATE_KEY_FNAME "string8")
set(TEMPLATE_USE_KEY  "")
set(TEMPLATE_KEY_INITIAL_VALUE "REPEAT(' ',8)" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "CHARACTER(LEN=16)")
set(TEMPLATE_KEY_DUMMY_TYPE "CHARACTER(LEN=*)")
set(TEMPLATE_KEY_NAME "STRING16")
set(TEMPLATE_KEY_FNAME "string16")
set(TEMPLATE_USE_KEY  "")
set(TEMPLATE_KEY_INITIAL_VALUE "REPEAT(' ',16)" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "CHARACTER(LEN=32)")
set(TEMPLATE_KEY_DUMMY_TYPE "CHARACTER(LEN=*)")
set(TEMPLATE_KEY_NAME "STRING32")
set(TEMPLATE_KEY_FNAME "string32")
set(TEMPLATE_USE_KEY  "")
set(TEMPLATE_KEY_INITIAL_VALUE "REPEAT(' ',32)" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "CHARACTER(LEN=64)")
set(TEMPLATE_KEY_DUMMY_TYPE "CHARACTER(LEN=*)")
set(TEMPLATE_KEY_NAME "STRING64")
set(TEMPLATE_KEY_FNAME "string64")
set(TEMPLATE_USE_KEY  "")
set(TEMPLATE_KEY_INITIAL_VALUE "REPEAT(' ',64)" )
configure_file(  ${MULTIOM_CONTAINERS_DIR}/keyset_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/keyset_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "CHARACTER(LEN=16)")
set(TEMPLATE_KEY_DUMMY_TYPE "CHARACTER(LEN=*)")
set(TEMPLATE_KEY_NAME "STR16_ENC")
set(TEMPLATE_KEY_FNAME "str16_enc")
set(TEMPLATE_USE_KEY  "")
set(TEMPLATE_KEY_INITIAL_VALUE "REPEAT(' ',16)" )
set(USE_ALLOCATOR_INTERFACE  "USE :: GRIB_SECTION_BASE_MOD, ONLY: SECTION_ALLOCATOR_IF")
set(USE_OUT_CLASS_TYPE  "USE :: GRIB_SECTION_BASE_MOD, ONLY: GRIB_SECTION_BASE_A")
set(ALLOCATOR_IFACE  "SECTION_ALLOCATOR_IF")
set(OUT_CLASS_TYPE  "GRIB_SECTION_BASE_A")
set(TEMPLATE_IS_EQUAL  "(KEY1 .EQ. KEY2)")
set(TEMPLATE_IS_LOWER_THAN  "(KEY1 .LT. KEY2)")
configure_file(  ${MULTIOM_CONTAINERS_DIR}/class_register_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/class_register_${TEMPLATE_KEY_FNAME}_mod.F90  )


set(TEMPLATE_KEY_TYPE "INTEGER(KIND=INT64), DIMENSION(2)")
set(TEMPLATE_KEY_DUMMY_TYPE "INTEGER(KIND=INT64), DIMENSION(2)")
set(TEMPLATE_KEY_NAME "2INT64_ENC")
set(TEMPLATE_KEY_FNAME "2int64_enc")
set(TEMPLATE_USE_KEY  "USE, INTRINSIC :: ISO_FORTRAN_ENV, ONLY: INT64")
set(TEMPLATE_KEY_INITIAL_VALUE "[0_INT64,0_INT64]" )
set(USE_ALLOCATOR_INTERFACE  "USE :: GRIB_SECTION_BASE_MOD, ONLY: SECTION_ALLOCATOR_IF")
set(USE_OUT_CLASS_TYPE  "USE :: GRIB_SECTION_BASE_MOD, ONLY: GRIB_SECTION_BASE_A")
set(ALLOCATOR_IFACE  "SECTION_ALLOCATOR_IF")
set(OUT_CLASS_TYPE  "GRIB_SECTION_BASE_A")
set(TEMPLATE_LOCAL_CHECK_VARIABLES  "integer(kind=int64) :: i")
set(TEMPLATE_IS_EQUAL  "all(KEY1 .EQ. KEY2)")
set(TEMPLATE_IS_LOWER_THAN  "dot_product( (key1-key2)/max( 1, abs(key1-key2)), [(10**(size(key1)-i), i=1,size(key1))] ) .LT. 0")
configure_file(  ${MULTIOM_CONTAINERS_DIR}/class_register_mod.F90 ${CMAKE_CURRENT_BINARY_DIR}/class_register_${TEMPLATE_KEY_FNAME}_mod.F90  )

# Collect source files in module2
set( MULTIOM_CONTAINERS_SOURCES
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_int8_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_int16_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_int32_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_int64_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_real32_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_real64_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_string2_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_string4_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_string8_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_string16_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_string32_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/keyset_string64_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/class_register_str16_enc_mod.F90
  ${CMAKE_CURRENT_BINARY_DIR}/class_register_2int64_enc_mod.F90
  CACHE INTERNAL "List of all sources in containers directory"
)

# Optionally, message what has been appended for debugging
foreach(source_file IN LISTS MULTIOM_CONTAINERS_SOURCES)

    # Extract the filename (without the directory)
    get_filename_component(filename ${source_file} NAME)

    # Print the filename
    message("${OFFSET}    - ${filename}")
endforeach()