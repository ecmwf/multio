#ifndef OUTPUT_MANAGER_PREPROCESSOR_ERRHDL_UTILS_H
#define OUTPUT_MANAGER_PREPROCESSOR_ERRHDL_UTILS_H

#define PP_ERROR_HANDLER \
666 CONTINUE;

#define PP_DEBUG_USE_VARS \
USE :: DATAKINDS_DEF_MOD, ONLY: JPIB_K


#define PP_DEBUG_DECL_VARS \
INTEGER(KIND=JPIB_K) :: ERRIDX, LINE

#define PP_DEBUG_DEVELOP_COND_THROW( COND, ERR_CODE ) \
IF ( COND ) THEN; \
LINE = __LINE__; \
ERRIDX = ERR_CODE; \
GOTO 666; \
ENDIF

#define PP_TRYCALL( ERR_CODE ) \
LINE   = __LINE__; \
ERRIDX = ERR_CODE; \
GOTO (666),

#define PP_SET_ERR_SUCCESS( RET ) \
RET = 0

#define PP_SET_ERR_FAILURE( RET ) \
RET = 1

#define PP_DEBUG_DEVELOP_THROW( ERR_CODE ) \
LINE   = __LINE__; \
ERRIDX = ERR_CODE; \
GOTO 666;


#define PP_DEBUG_CRITICAL_COND_THROW( COND, ERR_CODE ) \
IF ( COND ) THEN; \
LINE = __LINE__; \
ERRIDX = ERR_CODE; \
GOTO 666; \
ENDIF

#define PP_DEBUG_CRITICAL_THROW( ERR_CODE ) \
LINE = __LINE__; \
ERRIDX = ERR_CODE; \
GOTO 666;

#define PP_DEBUG_HIGH_THROW( ERR_CODE ) \
LINE = __LINE__; \
ERRIDX = ERR_CODE; \
GOTO 666;

#define PP_DEBUG_PUSH_FRAME() \
CALL HOOKS%DEBUG_HOOK_%PUSH_ERROR_FRAME( PP_FILE_NAME, PP_SECTION_TYPE, PP_SECTION_NAME, PP_PROCEDURE_TYPE, PP_PROCEDURE_NAME, LINE, ERRIDX )

#define PP_DEBUG_ENABLE_ERROR_HANDLING

#define PP_DEBUG_PUSH_MSG_TO_FRAME( MSG ) \
CALL HOOKS%DEBUG_HOOK_%PUSH_ERROR_MSG( MSG )

#define PP_DEBUG_CREATE_ERROR( STR, MSG )

#define PP_DEBUG_CREATE_ERROR_MSG_GRIB( STR, MSG, GRIBID, GRIBMSG )

#define PP_DEBUG_ABORT( )

#endif